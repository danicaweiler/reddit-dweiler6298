{"version":3,"sources":["App.js","Subreddit.js","Favourites.js","reportWebVitals.js","index.js"],"names":["App","SubReddit","props","state","items","handleSubmit","bind","favourite","subRed","document","getElementById","value","fetch","then","res","json","result","setState","isLoaded","data","children","catch","err","console","log","this","id","JSON","parse","localStorage","getItem","push","setItem","stringify","window","location","reload","error","message","className","htmlFor","name","type","onClick","map","item","href","url","title","author","self_text","React","Component","Favourites","remove","forEach","element","length","WithFavourites","NoFavourites","index","indexOf","splice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.220d815f.chunk.js","sourcesContent":["import './App.css';\n\nfunction App() {\n  return (\n    <div></div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nexport default class SubReddit extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {items: []};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.favourite = this.favourite.bind(this);\r\n    }\r\n        \r\n    handleSubmit() {\r\n        const subRed = document.getElementById('sub').value\r\n        var url = 'https://www.reddit.com/r/' + subRed + '/hot.json?limit=10'\r\n        fetch(url)\r\n        .then(function(res) {\r\n            return res.json();   // Convert the data into JSON\r\n        })\r\n        .then(\r\n            (result) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: result.data.children\r\n            });          \r\n        })\r\n        .catch(\r\n            (err) => {\r\n            console.log(err);   // Log error if any\r\n        });\r\n    }\r\n      \r\n    componentDidMount() {\r\n        this.SubReddit();\r\n    }\r\n\r\n    SubReddit() {\r\n        this.setState({\r\n            isLoaded: true\r\n        });  \r\n    }\r\n\r\n    favourite(id) {\r\n        console.log(\"This was favourited: \" + id)   \r\n        var data = JSON.parse(localStorage.getItem('favourites'))\r\n        if (data != null) {\r\n            data.push(id)\r\n        } else {\r\n            data = [id]\r\n        }\r\n        localStorage.setItem('favourites', JSON.stringify(data))\r\n        window.location.reload();\r\n    }\r\n  \r\n    render() {\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n      <div>\r\n        <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <label htmlFor=\"id\"> Subreddit: \r\n            <input id=\"sub\" name=\"sub\" type=\"text\" className=\"form-control\" />\r\n            <button className=\"btn btn-primary\" type='submit' onClick={this.handleSubmit}> Get </button>\r\n        </label>    \r\n        </header>\r\n        </div>\r\n        <h1>Sub-Reddits</h1>\r\n        <ul id=\"sublist\">\r\n          { items.map(item => (\r\n            <li key={item.data.id} id={item.data.id}>\r\n                    <a id={item.data.id + \"title\"} className=\"title\" href={item.data.url}> {item.data.title} </a>\r\n                    <div id={item.data.id + \"author\"}className=\"author\"> {item.data.author} </div>\r\n                    <div id={item.data.id + \"content\"}className=\"content\"> {item.data.self_text} </div>\r\n                    <button className=\"btn btn-primary\" type='button' onClick={() => this.favourite(item.data.id)}> Favourite </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        </div>\r\n      );\r\n    \r\n    }\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class Favourites extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.remove = this.remove.bind(this);\r\n        this.state = { items: [] }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let data = JSON.parse(localStorage.getItem('favourites'))\r\n        if (data != null) {\r\n            data.forEach(element => {\r\n                var url = 'https://www.reddit.com/comments/' + element + '.json';\r\n                fetch(url)\r\n                    .then(function (res) {\r\n                        return res.json();   // Convert the data into JSON\r\n                    })\r\n                    .then(\r\n                        (result) => {\r\n                            var { items } = this.state;\r\n                            items.push(result[0].data)\r\n                            this.setState({\r\n                                isLoaded: true,\r\n                                items: items\r\n                            });\r\n                        })\r\n                    .catch(\r\n                        (err) => {\r\n                            console.log(err);   // Log error if any\r\n                        });\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    Favourites() {\r\n    }\r\n\r\n    render() {\r\n        const { items } = this.state;\r\n        if (items != null && items.length > 0) {\r\n            return this.WithFavourites(items);\r\n        }\r\n        return this.NoFavourites();\r\n    }\r\n\r\n    NoFavourites() {\r\n        return (\r\n            <div key=\"emptyFav\"></div>\r\n        );\r\n    }\r\n\r\n    WithFavourites(props) {\r\n        const { items } = this.state;\r\n        return (<div key=\"hasFavs\"><h1>Favourites</h1>\r\n            <ul key=\"favs\">\r\n                {items.map(item => (\r\n                    <li key={item.children[0].data.id} id={item.children[0].data.id}>\r\n                        <a id={item.children[0].data.id + \"Ftitle\"} className=\"title\" href={item.children[0].data.url}> {item.children[0].data.title} </a>\r\n                        <div id={item.children[0].data.id + \"Fauthor\"} className=\"author\"> {item.children[0].data.author} </div>\r\n                        <div id={item.children[0].data.id + \"Fcontent\"} className=\"content\"> {item.children[0].data.self_text} </div>\r\n                        <button className=\"btn btn-primary\" type='button' onClick={() => this.remove(item.children[0].data.id)}> Remove </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    remove(item) {\r\n        console.log(\"Remove: \" + item)\r\n        var data = JSON.parse(localStorage.getItem('favourites'))\r\n        if (data != null) {\r\n            const index = data.indexOf(item);\r\n            if (index > -1) {\r\n                data.splice(index, 1);\r\n            }\r\n\r\n                    \r\n        localStorage.setItem('favourites', JSON.stringify(data))\r\n        window.location.reload();\r\n        }\r\n\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SubReddit from './Subreddit';\nimport Favourites from './Favourites';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <SubReddit/>\n    <Favourites/>\n  </React.StrictMode>,\n  document.getElementById('root')\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}